name: CD # Continuous Deployment

on:
  push:
    tags:
      - '[v]?[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    name: Publishing for ${{ matrix.job.os }}-${{ matrix.job.architecture }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [stable]
        job:
          - os: ubuntu-latest
            os-name: linux
            target: x86_64-unknown-linux-gnu
            architecture: x86_64
            deb_architecture: amd64
            binary-postfix: ""
            use-cross: false
          - os: macos-latest
            os-name: macos
            target: aarch64-apple-darwin
            architecture: aarch64
            deb_architecture: aarch64
            binary-postfix: ""
            use-cross: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.job.target }}
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.job.use-cross }}
          toolchain: ${{ matrix.rust }}
          args: --release --target ${{ matrix.job.target }}

      - name: install strip command
        shell: bash
        run: |
          if [[ ${{ matrix.job.target }} == aarch64-unknown-linux-gnu ]]; then
              sudo apt update
              sudo apt-get install -y binutils-aarch64-linux-gnu
          fi
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.job.target }}/release

          ####### reduce binary size by removing debug symbols #######
          BINARY_NAME=wakeonlan${{ matrix.job.binary-postfix }}
          if [[ ${{ matrix.job.target }} == aarch64-unknown-linux-gnu ]]; then
            GCC_PREFIX="aarch64-linux-gnu-"
          else
            GCC_PREFIX=""
          fi
          "$GCC_PREFIX"strip $BINARY_NAME

          ########## create tar.gz ##########
          RELEASE_NAME=wakeonlan-${GITHUB_REF/refs\/tags\//}-${{ matrix.job.os-name }}-${{ matrix.job.architecture }}
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME

          ########## create sha256 ##########
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi

      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v16
        with:
          name: jeffutter
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build --accept-flake-config --option log-lines 200
      - run: nix flake check --accept-flake-config

      - name: Releasing assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/${{ matrix.job.target }}/release/wakeonlan-*.tar.gz
            target/${{ matrix.job.target }}/release/wakeonlan-*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
